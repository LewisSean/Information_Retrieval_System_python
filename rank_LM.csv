doc_ID,doc_name,score
3,Admission Policies for Caches of Search Engine Results,0.012629239978233269
21,Dynamic Index Pruning for Effective Caching,0.01095894552270391
33,On caching search engine query results,0.010596166636435093
32,Predictive caching and prefetching of query results in search engines,0.010194086704153818
2,The Impact of Caching on Search Engines,0.009445207431784612
22,Performance of Compressed Inverted List Caching in Search Engines,0.009321401938851604
15,Boosting the Performance of Web Search Engines: Caching and Prefetching Query Results by Exploiting Historical Usage Data,0.008762710598478463
17,Three-level Caching for Efficient Query Processing in Large Web Search Engines,0.007852651309027148
11,A Reference Collection for Web Spam,0.007845093415563215
10,Static Index Pruning for Information Retrieval Systems,0.007197273975797466
26,A three-level search-engine index based in query log distribution,0.006546509902214601
13,Improving Web Search Efficiency via a Locality Based Static Pruning Method,0.006183731015945781
18,Pruning Policies for Two-Tiered Inverted Index with Correctness Guarantee,0.005459822238345727
31,Interaction of query evaluation and buffer management for information retrieval,0.005142390712860512
5,A Scalable Fully Distributed Web Crawler,0.0050033254731241305
34,"A self-tuning, low overhead replacement cache",0.004677256355108704
4,Static Pruning of Terms in Inverted Files,0.004495866911974294
36,Self-indexing inverted files for fast text retrieval,0.0044667150371848355
28,"Index compression is good, especially for random access",0.0044667150371848355
24,Improved word-aligned binary compression for text indexing,0.0044667150371848355
9,A Document-centric Approach to Static Index Pruning in Text Retrieval Systems,0.0044667150371848355
27,Compressed perfect embedded skip lists for quick inverted-index lookups,0.0037910393615091602
30,Super-scalar database compression between RAM and CPU-cache,0.003728560775540641
16,Optimized Query Execution in Large Search Engines with Global Page Ordering,0.003318602311890903
14,Optimal Aggregation Algorithms for Middleware,0.003292218392889534
12,Relevance Weighting for Query Independent Evidence,0.002841767942439083
29,Cost-aware WWW proxy caching algorithms,0.0027964205816554807
23,Index compression using fixed binary codewords,0.0027510732208718787
37,Adding compression to block addressing inverted indexes,0.002429322899121557
1,Pruned Query Evaluation Using Pre-computed Impacts,0.002247933455987147
35,Outperforming LRU with an adaptive replacement cache algorithm,0.0022333575185924178
25,Modern Information Retrieval,0.0
20,Information Re-retrieval: Repeat Queries in Yahoo's Logs,0.0
19,Efficient Document Retrieval in Main Memory,0.0
8,Efficiency vs. Effectiveness in Terabyte-scale Information Retrieval,0.0
7,Lessons from Giant-scale Services,0.0
6,The WebGraph framework I: Compression techniques,0.0
