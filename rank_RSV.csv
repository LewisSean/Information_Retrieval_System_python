doc_ID,doc_name,score
15,Boosting the Performance of Web Search Engines: Caching and Prefetching Query Results by Exploiting Historical Usage Data,5.089562555012597
32,Predictive caching and prefetching of query results in search engines,3.4067408316851067
3,Admission Policies for Caches of Search Engine Results,3.0409855063844704
22,Performance of Compressed Inverted List Caching in Search Engines,2.9172196435100797
17,Three-level Caching for Efficient Query Processing in Large Web Search Engines,2.4015186971170897
13,Improving Web Search Efficiency via a Locality Based Static Pruning Method,2.2993996923448146
33,On caching search engine query results,2.0951761644820084
26,A three-level search-engine index based in query log distribution,1.9793792092002742
2,The Impact of Caching on Search Engines,1.9064957781183067
21,Dynamic Index Pruning for Effective Caching,1.7793572660215604
31,Interaction of query evaluation and buffer management for information retrieval,1.6959318686858618
11,A Reference Collection for Web Spam,1.6674798933993698
9,A Document-centric Approach to Static Index Pruning in Text Retrieval Systems,1.6008863052205244
18,Pruning Policies for Two-Tiered Inverted Index with Correctness Guarantee,1.3742386727223996
10,Static Index Pruning for Information Retrieval Systems,1.3742386727223996
5,A Scalable Fully Distributed Web Crawler,1.2831126919166063
30,Super-scalar database compression between RAM and CPU-cache,1.1552411200825607
4,Static Pruning of Terms in Inverted Files,1.1228842808393962
34,"A self-tuning, low overhead replacement cache",1.0161334272800495
16,Optimized Query Execution in Large Search Engines with Global Page Ordering,0.9399350443994479
36,Self-indexing inverted files for fast text retrieval,0.8127965323027015
28,"Index compression is good, especially for random access",0.8127965323027015
27,Compressed perfect embedded skip lists for quick inverted-index lookups,0.8127965323027015
24,Improved word-aligned binary compression for text indexing,0.8127965323027015
1,Pruned Query Evaluation Using Pre-computed Impacts,0.5614421404196981
37,Adding compression to block addressing inverted indexes,0.42842933081993784
23,Index compression using fixed binary codewords,0.42842933081993784
35,Outperforming LRU with an adaptive replacement cache algorithm,0.40511859329916083
29,Cost-aware WWW proxy caching algorithms,0.40511859329916083
14,Optimal Aggregation Algorithms for Middleware,0.38436720148276365
12,Relevance Weighting for Query Independent Evidence,0.38436720148276365
25,Modern Information Retrieval,0
20,Information Re-retrieval: Repeat Queries in Yahoo's Logs,0
19,Efficient Document Retrieval in Main Memory,0
8,Efficiency vs. Effectiveness in Terabyte-scale Information Retrieval,0
7,Lessons from Giant-scale Services,0
6,The WebGraph framework I: Compression techniques,0
